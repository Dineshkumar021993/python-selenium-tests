{"name": "test_InvalidUsername_and_validPassword", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id=\"password\"]\"}\n  (Session info: chrome=116.0.5845.188); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00D337C3+48947]\n\t(No symbol) [0x00CC8551]\n\t(No symbol) [0x00BCC92D]\n\t(No symbol) [0x00BF9E38]\n\t(No symbol) [0x00BF9EFB]\n\t(No symbol) [0x00C28EF2]\n\t(No symbol) [0x00C150D4]\n\t(No symbol) [0x00C275DA]\n\t(No symbol) [0x00C14E86]\n\t(No symbol) [0x00BF16C7]\n\t(No symbol) [0x00BF284D]\n\tGetHandleVerifier [0x00F7FDF9+2458985]\n\tGetHandleVerifier [0x00FC744F+2751423]\n\tGetHandleVerifier [0x00FC1361+2726609]\n\tGetHandleVerifier [0x00DB0680+560624]\n\t(No symbol) [0x00CD238C]\n\t(No symbol) [0x00CCE268]\n\t(No symbol) [0x00CCE392]\n\t(No symbol) [0x00CC10B7]\n\tBaseThreadInitThunk [0x76947BA9+25]\n\tRtlInitializeExceptionChain [0x77EBB79B+107]\n\tRtlClearBits [0x77EBB71F+191]", "trace": "self = <KitaabDesktop.LoginMain.TestLoginPage object at 0x0000023ACF9FC650>\n\n    def test_InvalidUsername_and_validPassword(self):\n        EnterUserName = driver.find_element(By.XPATH, '//input[@id =\"emailOrPhoneNum\"]')\n        highlight_element(EnterUserName, driver)\n        EnterUserName.send_keys(\"devuser@lotusinsight.in\")\n        allure.attach(driver.get_screenshot_as_png(), name=\"EnterUserName\",\n                      attachment_type=allure.attachment_type.PNG)\n        time.sleep(5)\n    \n        ClickNextButton = driver.find_element(By.XPATH, \"//button[text()='Next']\")\n        highlight_element(ClickNextButton, driver)\n        ClickNextButton.click()\n        allure.attach(driver.get_screenshot_as_png(), name=\"ClickNextButton\",\n                      attachment_type=allure.attachment_type.PNG)\n        time.sleep(10)\n        allure.attach(driver.get_screenshot_as_png(), name=\"FinalPage\",\n                      attachment_type=allure.attachment_type.PNG)\n    \n>       EnterPassword = driver.find_element(By.XPATH, '//input[@id=\"password\"]')\n\nKitaabDesktop\\LoginMain.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023ACEE714D0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x76947BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77EBB79B+107]\\\\n\\\\tRtlClearBits [0x77EBB71F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id=\"password\"]\"}\nE         (Session info: chrome=116.0.5845.188); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00D337C3+48947]\nE       \t(No symbol) [0x00CC8551]\nE       \t(No symbol) [0x00BCC92D]\nE       \t(No symbol) [0x00BF9E38]\nE       \t(No symbol) [0x00BF9EFB]\nE       \t(No symbol) [0x00C28EF2]\nE       \t(No symbol) [0x00C150D4]\nE       \t(No symbol) [0x00C275DA]\nE       \t(No symbol) [0x00C14E86]\nE       \t(No symbol) [0x00BF16C7]\nE       \t(No symbol) [0x00BF284D]\nE       \tGetHandleVerifier [0x00F7FDF9+2458985]\nE       \tGetHandleVerifier [0x00FC744F+2751423]\nE       \tGetHandleVerifier [0x00FC1361+2726609]\nE       \tGetHandleVerifier [0x00DB0680+560624]\nE       \t(No symbol) [0x00CD238C]\nE       \t(No symbol) [0x00CCE268]\nE       \t(No symbol) [0x00CCE392]\nE       \t(No symbol) [0x00CC10B7]\nE       \tBaseThreadInitThunk [0x76947BA9+25]\nE       \tRtlInitializeExceptionChain [0x77EBB79B+107]\nE       \tRtlClearBits [0x77EBB71F+191]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "EnterUserName", "source": "c9230398-dadf-4013-b775-3da62e40a05d-attachment.png", "type": "image/png"}, {"name": "ClickNextButton", "source": "4802f886-3952-4094-be21-0ea3474c868f-attachment.png", "type": "image/png"}, {"name": "FinalPage", "source": "9b2bd3c7-a2c9-45d4-b12b-df71df9fe3f4-attachment.png", "type": "image/png"}], "start": 1695208981813, "stop": 1695209002113, "uuid": "26b92e13-9b8a-4b37-83e6-a98b8882f513", "historyId": "5f5ff215cf7cd47e8b63dbcab0470a10", "testCaseId": "5f5ff215cf7cd47e8b63dbcab0470a10", "fullName": "KitaabDesktop.LoginMain.TestLoginPage#test_InvalidUsername_and_validPassword", "labels": [{"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "KitaabDesktop"}, {"name": "suite", "value": "LoginMain"}, {"name": "subSuite", "value": "TestLoginPage"}, {"name": "host", "value": "9599-IT-dinesh"}, {"name": "thread", "value": "17252-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "KitaabDesktop.LoginMain"}]}